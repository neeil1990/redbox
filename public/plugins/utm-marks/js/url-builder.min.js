(function($) {


    var default_options = {

        type: 'html',
        content: '',
        url: '',
        ajax: {},
        ajax_request: null,

        closeOnEsc: true,
        closeOnOverlayClick: true,

        clone: false,

        overlay: {
            block: undefined,
            tpl: '<div class="swpmodal-overlay"></div>',
            css: {
                backgroundColor: '#000',
                opacity: .6
            }
        },

        container: {
            block: undefined,
            tpl: '<div class="swpmodal-container"><table class="swpmodal-container_i"><tr><td class="swpmodal-container_i2"></td></tr></table></div>'
        },

        wrap: undefined,
        body: undefined,

        errors: {
            tpl: '<div class="swpmodal-error swpmodal-close"></div>',
            autoclose_delay: 2000,
            ajax_unsuccessful_load: 'Error'
        },

        openEffect: {
            type: 'fade',
            speed: 400
        },
        closeEffect: {
            type: 'fade',
            speed: 400
        },

        beforeOpen: $.noop,
        afterOpen: $.noop,
        beforeClose: $.noop,
        afterClose: $.noop,
        afterLoading: $.noop,
        afterLoadingOnShow: $.noop,
        errorLoading: $.noop

    };


    var modalID = 0;
    var modals = $([]);


    var utils = {



        isEventOut: function(blocks, e) {
            var r = true;
            $(blocks).each(function() {
                if ($(e.target).get(0) == $(this).get(0)) r = false;
                if ($(e.target).closest('HTML', $(this).get(0)).length == 0) r = false;
            });
            return r;
        }


    };


    var modal = {



        getParentEl: function(el) {
            var r = $(el);
            if (r.data('swpmodal')) return r;
            r = $(el).closest('.swpmodal-container').data('swpmodalParentEl');
            if (r) return r;
            return false;
        },



        transition: function(el, action, options, callback) {
            callback = callback == undefined ? $.noop : callback;
            switch (options.type) {
                case 'fade':
                    action == 'show' ? el.fadeIn(options.speed, callback) : el.fadeOut(options.speed, callback);
                    break;
                case 'none':
                    action == 'show' ? el.show() : el.hide();
                    callback();
                    break;
            }
        },



        prepare_body: function(D, $this) {


            $('.swpmodal-close', D.body).unbind('click.swpmodal').bind('click.swpmodal', function() {
                $this.swpmodal('close');
                return false;
            });

        },



        init_el: function($this, options) {
            var D = $this.data('swpmodal');
            if (D) return;

            D = options;
            modalID++;
            D.modalID = modalID;


            D.overlay.block = $(D.overlay.tpl);
            D.overlay.block.css(D.overlay.css);


            D.container.block = $(D.container.tpl);


            D.body = $('.swpmodal-container_i2', D.container.block);
            if (options.clone) {
                D.body.html($this.clone(true));
            } else {
                $this.before('<div id="swpmodalReserve' + D.modalID + '" style="display: none" />');
                D.body.html($this);
            }


            modal.prepare_body(D, $this);


            if (D.closeOnOverlayClick)
                D.overlay.block.add(D.container.block).click(function(e) {
                    if (utils.isEventOut($('>*', D.body), e))
                        $this.swpmodal('close');
                });


            D.container.block.data('swpmodalParentEl', $this);
            $this.data('swpmodal', D);
            modals = $.merge(modals, $this);


            $.proxy(actions.show, $this)();
            if (D.type == 'html') return $this;


            if (D.ajax.beforeSend != undefined) {
                var fn_beforeSend = D.ajax.beforeSend;
                delete D.ajax.beforeSend;
            }
            if (D.ajax.success != undefined) {
                var fn_success = D.ajax.success;
                delete D.ajax.success;
            }
            if (D.ajax.error != undefined) {
                var fn_error = D.ajax.error;
                delete D.ajax.error;
            }
            var o = $.extend(true, {
                url: D.url,
                beforeSend: function() {
                    D.body.html('<div class="swpmodal-loading" />');
                    if (fn_beforeSend !== undefined)
                        fn_beforeSend(D, $this);
                },
                success: function(response) {

                    $this.trigger('afterLoading');
                    response = D.afterLoading(D, $this, response) || response;

                    if (fn_success == undefined) {
                        D.body.html(response);
                    } else {
                        fn_success(D, $this, response);
                    }
                    modal.prepare_body(D, $this);

                    $this.trigger('afterLoadingOnShow');
                    D.afterLoadingOnShow(D, $this, response);

                },
                error: function() {

                    $this.trigger('errorLoading');
                    D.errorLoading(D, $this);

                    if (fn_error == undefined) {
                        D.body.html(D.errors.tpl);
                        $('.swpmodal-error', D.body).html(D.errors.ajax_unsuccessful_load);
                        $('.swpmodal-close', D.body).click(function() {
                            $this.swpmodal('close');
                            return false;
                        });
                        if (D.errors.autoclose_delay)
                            setTimeout(function() {
                                $this.swpmodal('close');
                            }, D.errors.autoclose_delay);
                    } else {
                        fn_error(D, $this);
                    }
                }
            }, D.ajax);
            D.ajax_request = $.ajax(o);


            $this.data('swpmodal', D);

        },



        init: function(options) {
            options = $.extend(true, {}, default_options, options);
            if ($.isFunction(this)) {
                if (options == undefined) {
                    $.error('jquery.swpmodal: Uncorrect parameters');
                    return;
                }
                if (options.type == '') {
                    $.error('jquery.swpmodal: Don\'t set parameter "type"');
                    return;
                }
                switch (options.type) {
                    case 'html':
                        if (options.content == '') {
                            $.error('jquery.swpmodal: Don\'t set parameter "content"');
                            return
                        }
                        var c = options.content;
                        options.content = '';

                        return modal.init_el($(c), options);
                        break;
                    case 'ajax':
                        if (options.url == '') {
                            $.error('jquery.swpmodal: Don\'t set parameter "url"');
                            return;
                        }
                        return modal.init_el($('<div />'), options);
                        break;
                }
            } else {
                return this.each(function() {
                    modal.init_el($(this), $.extend(true, {}, options));
                });
            }
        }
    };


    var actions = {
        show: function() {
            var $this = modal.getParentEl(this);
            if ($this === false) {
                $.error('jquery.swpmodal: Uncorrect call');
                return;
            }
            var D = $this.data('swpmodal');


            D.overlay.block.hide();
            D.container.block.hide();
            $('BODY').append(D.overlay.block);
            $('BODY').append(D.container.block);


            D.beforeOpen(D, $this);
            $this.trigger('beforeOpen');


            if (D.wrap.css('overflow') != 'hidden') {
                D.wrap.data('swpmodalOverflow', D.wrap.css('overflow'));
                var w1 = D.wrap.outerWidth(true);
                D.wrap.css('overflow', 'hidden');
                var w2 = D.wrap.outerWidth(true);
                if (w2 != w1)
                    D.wrap.css('marginRight', (w2 - w1) + 'px');
            }


            modals.not($this).each(function() {
                var d = $(this).data('swpmodal');
                d.overlay.block.hide();
            });


            modal.transition(D.overlay.block, 'show', modals.length > 1 ? {type: 'none'} : D.openEffect);
            modal.transition(D.container.block, 'show', modals.length > 1 ? {type: 'none'} : D.openEffect, function() {
                D.afterOpen(D, $this);
                $this.trigger('afterOpen');
            });

            return $this;
        },



        close: function() {
            if ($.isFunction(this)) {
                modals.each(function() {
                    $(this).swpmodal('close');
                });
            } else {
                return this.each(function() {
                    var $this = modal.getParentEl(this);
                    if ($this === false) {
                        $.error('jquery.swpmodal: Uncorrect call');
                        return;
                    }
                    var D = $this.data('swpmodal');


                    if (D.beforeClose(D, $this) === false) return;
                    $this.trigger('beforeClose');


                    modals.not($this).last().each(function() {
                        var d = $(this).data('swpmodal');
                        d.overlay.block.show();
                    });

                    modal.transition(D.overlay.block, 'hide', modals.length > 1 ? {type: 'none'} : D.closeEffect);
                    modal.transition(D.container.block, 'hide', modals.length > 1 ? {type: 'none'} : D.closeEffect, function() {


                        D.afterClose(D, $this);
                        $this.trigger('afterClose');


                        if (!D.clone)
                            $('#swpmodalReserve' + D.modalID).replaceWith(D.body.find('>*'));

                        D.overlay.block.remove();
                        D.container.block.remove();
                        $this.data('swpmodal', null);
                        if (!$('.swpmodal-container').length) {
                            if (D.wrap.data('swpmodalOverflow'))
                                D.wrap.css('overflow', D.wrap.data('swpmodalOverflow'));
                            D.wrap.css('marginRight', 0);
                        }

                    });

                    if (D.type == 'ajax')
                        D.ajax_request.abort();

                    modals = modals.not($this);
                });
            }
        },



        setDefault: function(options) {
            $.extend(true, default_options, options);
        }


    };


    $(function() {
        default_options.wrap = $((document.all && !document.querySelector) ? 'html' : 'body');
    });



    $(document).bind('keyup.swpmodal', function(e) {
        var m = modals.last();
        if (!m.length) return;
        var D = m.data('swpmodal');
        if (D.closeOnEsc && (e.keyCode === 27))
            m.swpmodal('close');
    });


    $.swpmodal = $.fn.swpmodal = function(method) {

        if (actions[method]) {
            return actions[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return modal.init.apply(this, arguments);
        } else {
            $.error('jquery.swpmodal: Method ' + method + ' does not exist');
        }

    };


})(jQuery);

! function(t, r) {
    var a = {
            container: t(".urlBuilder"),
            url: t(".urlBuilder_el-url"),
            urls: t(".urlBuilder_el-urls"),
            urlInput: t("#urlBuilderUrl"),
            urlsTextarea: t("#urlBuilderUrls"),
            UtmSourceInput: t("#urlBuilderUtmSource"),
            UtmMediumInput: t("#urlBuilderUtmMedium"),
            UtmCampaignInput: t("#urlBuilderUtmCampaign"),
            UtmTermInput: t("#urlBuilderUtmTerm"),
            UtmContentInput: t("#urlBuilderUtmContent"),
            openstat: t("#urlBuilderOpenstat"),
            paramsDirect: t("#urlBuilderParamsDirect"),
            paramsAdwords: t("#urlBuilderParamsAdwords"),
            paramsMailru: t("#urlBuilderParamsMailru"),
            paramsVK: t("#urlBuilderParamsVK"),
            go: t(".urlBuilder_go"),
            result: t(".urlBuilder_result"),
            resultInput: t(".urlBuilder_result INPUT"),
            resultTextarea: t(".urlBuilder_result TEXTAREA"),
            error: t(".urlBuilder_error")
        },
        e = function(t) {
            if (t = t.trim(), "" == t) return !1;
            var r = /^(http:\/\/|https:\/\/|\/\/).*/i;
            return t.match(r) || (t = "http://" + t), t
        },
        l = function(t) {
            if (t = t.trim(), "" == t) return !1;
            t = encodeURIComponent(t);
            var r = "\\" + encodeURIComponent("{"),
                a = "\\" + encodeURIComponent("}");
            return t = t.replace(new RegExp(r + r + "(.+?)" + a + a, "g"), "{{$1}}"), t = t.replace(new RegExp(r + "(.+?)" + a, "g"), "{$1}")
        },
        i = function(t) {
            var r, a, e, l, i, u, n, d = "",
                c = 0,
                o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            t = t.replace(/\r\n/g, "\n");
            for (var s = "", p = 0; p < t.length; p++) {
                var m = t.charCodeAt(p);
                m < 128 ? s += String.fromCharCode(m) : m > 127 && m < 2048 ? (s += String.fromCharCode(m >> 6 | 192), s += String.fromCharCode(63 & m | 128)) : (s += String.fromCharCode(m >> 12 | 224), s += String.fromCharCode(m >> 6 & 63 | 128), s += String.fromCharCode(63 & m | 128))
            }
            for (t = s; c < t.length;) r = t.charCodeAt(c++), a = t.charCodeAt(c++), e = t.charCodeAt(c++), l = r >> 2, i = (3 & r) << 4 | a >> 4, u = (15 & a) << 2 | e >> 6, n = 63 & e, isNaN(a) ? u = n = 64 : isNaN(e) && (n = 64), d = d + o.charAt(l) + o.charAt(i) + o.charAt(u) + o.charAt(n);
            return d
        },
        u = function() {
            var r = l(a.UtmSourceInput.val()),
                e = l(a.UtmMediumInput.val()),
                u = l(a.UtmCampaignInput.val()),
                n = l(a.UtmTermInput.val()),
                d = l(a.UtmContentInput.val()),
                c = [
                    ["utm_source", r],
                    ["utm_medium", e],
                    ["utm_campaign", u],
                    ["utm_term", n],
                    ["utm_content", d]
                ];
            a.openstat.hasClass("active") && c.push(["_openstat", i(r + ";" + u + ";" + d + ";")]), a.paramsDirect.hasClass("active") && a.paramsDirect.next().find(".urlBuilder_el_check.active").each(function() {
                c.push([t(this).data("paramKey"), l(t(this).data("paramValue"))])
            }), a.paramsAdwords.hasClass("active") && a.paramsAdwords.next().find(".urlBuilder_el_check.active").each(function() {
                c.push([t(this).data("paramKey"), l(t(this).data("paramValue"))])
            }), a.paramsVK.hasClass("active") && a.paramsVK.next().find(".urlBuilder_el_check.active").each(function() {
                c.push([t(this).data("paramKey"), l(t(this).data("paramValue"))])
            }), a.paramsMailru.hasClass("active") && a.paramsMailru.next().find(".urlBuilder_el_check.active").each(function() {
                c.push([t(this).data("paramKey"), l(t(this).data("paramValue"))])
            });
            var o = [];
            return t.each(c, function(t, r) {
                r[1] !== !1 && o.push(r[0] + "=" + r[1])
            }), o.join("&")
        },
        n = function(t, r) {
            var a = "",
                e = t.split("#", 2);
            return 2 == e.length && (t = e[0], a = "#" + e[1]), t + (t.indexOf("?") === -1 ? "?" : "&") + r + a
        },
        d = function() {
            if (a.error.hide(), "none" == a.urls.css("display")) {
                var r = e(a.urlInput.val());
                if (r === !1) return void a.error.html("Укажите адрес страницы").show();
                a.resultInput.show().val(n(r, u())), a.resultTextarea.hide()
            } else {
                var l = [];
                if (a.urlsTextarea.val().split(/\r\n|\r|\n/).forEach(function(t) {
                        var r = e(t);
                        r !== !1 && l.push(r)
                    }), !l.length) return void a.error.html("Укажите адреса страниц").show();
                var i = u();
                l.forEach(function(t, r) {
                    l[r] = n(t, i)
                }), a.resultTextarea.show().val(l.join("\n")), a.resultInput.hide()
            }
            a.result.swpmodal({
                overlay: {
                    css: {
                        backgroundColor: "#000",
                        opacity: .5
                    }
                },
                openEffect: {
                    type: "none"
                },
                closeEffect: {
                    type: "none"
                },
				beforeClose: function(data, el) {
					t('body').css('overflow','auto');
				 },
                closeOnEsc: !0,
                closeOnOverlayClick: !1
            })
        };
    a.go.click(function() {
        d()
    }), a.container.find(".urlBuilder_el_input INPUT").focus(function() {
        t(this).closest(".urlBuilder_el").addClass("active")
    }).blur(function() {
        t(this).closest(".urlBuilder_el").removeClass("active")
    }), a.container.find(".urlBuilder_el_input_items SPAN, .urlBuilder_help_term.active").click(function() {
        var id = t(this).closest(".urlBuilder_help").attr("inp");
        var r = (id) ? r = t("#" + id) : t(this).closest(".urlBuilder_el").find("INPUT"),
            a = t(this).html();
        1 == t(this).data("addTerm") && (a = r.val() + ("" == r.val() ? "" : ".") + a), r.val(a)
    }), a.resultInput.add(a.resultTextarea).bind("focus click", function() {
        this.select()
    }), a.url.find(".urlBuilder_toogleUrls").click(function() {
        a.url.hide(), a.urls.show()
    }), a.urls.find(".urlBuilder_toogleUrls").click(function() {
        a.urls.hide(), a.url.show()
    }), a.container.find(".urlBuilder_tpl").on("click", "SPAN", function() {
        var r = t(this);
        switch (t(".urlBuilder_tpl SPAN").not(r).removeClass("active"), r.addClass("active"), a.UtmSourceInput.val(""), a.UtmMediumInput.val(""), a.UtmCampaignInput.val(""), a.UtmTermInput.val(""), a.UtmContentInput.val(""), a.container.find('.urlBuilder_help_tab[data-tab="yandex"]').click(), r.data("id")) {
            case "direct":
                a.UtmSourceInput.val("yandex"), a.UtmMediumInput.val("cpc"), a.UtmCampaignInput.val("{campaign_id}"), a.UtmTermInput.val("{keyword}"), a.UtmContentInput.val("{ad_id}"), a.container.find('.urlBuilder_help_tab[data-tab="yandex"]').click();
                break;
            case "adwords":
                a.UtmSourceInput.val("google"), a.UtmMediumInput.val("cpc"), a.UtmCampaignInput.val("{campaignid}"), a.UtmTermInput.val("{keyword}"), a.UtmContentInput.val("{creative}"), a.container.find('.urlBuilder_help_tab[data-tab="google"]').click();
                break;
            case "vk":
                a.UtmSourceInput.val("vk"), a.UtmMediumInput.val("cpc"), a.UtmCampaignInput.val("{campaign_id}"), a.UtmContentInput.val("{ad_id}"), a.container.find('.urlBuilder_help_tab[data-tab="vk"]').click();
                break;
            case "mailru":
                a.UtmSourceInput.val("targetmailru"), a.UtmMediumInput.val("cpc"), a.UtmCampaignInput.val("{{campaign_id}}"), a.UtmTermInput.val("{{geo}}.{{gender}}.{{age}}"), a.UtmContentInput.val("{{banner_id}}"), a.container.find('.urlBuilder_help_tab[data-tab="targetmailru"]').click()
        }
    }), a.container.find(".urlBuilder_el_helpToggle").click(function() {

        var r = t(this).closest(".urlBuilder_el").find(".urlBuilder_help");
        var i = t(this).closest(".urlBuilder_el").find("INPUT");

        r.attr("inp",i.attr("id"));

         r.swpmodal({
         overlay: {
         css: {
         backgroundColor: "#000",
         opacity: .5
         }
         },
         openEffect: {
         type: "none"
         },
         closeEffect: {
         type: "none"
         },
         afterOpen: function(data, el) {
            el.show();
         },
         beforeClose: function(data, el) {
            el.hide();
			t('body').css('overflow','auto');
         },
         })

        //"none" == r.css("display") ? r.show() : r.hide();
        var a = t(this).html();
        //t(this).html(t(this).data("toggleLabel")).data("toggleLabel", a)
    }), a.container.find(".urlBuilder_help_tab").click(function() {
        var r = t(this),
            a = t(this).closest(".urlBuilder_help");
        a.find(".urlBuilder_help_tab").removeClass("active"), r.addClass("active"), a.find(".urlBuilder_help_tabBody").hide(), a.find(".urlBuilder_help_tabBody-" + r.data("tab")).show()
    }), a.container.find(".urlBuilder_el_check").click(function() {
        t(this).toggleClass("active"), t(this).trigger("ubChange", t(this).hasClass("active"))
    }), a.paramsDirect.add(a.paramsMailru).add(a.paramsAdwords).add(a.paramsVK).bind("ubChange", function(r, a) {
        var e = t(this).next();
        a ? e.show() : e.hide()
    })
}(jQuery, window);